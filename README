Arduino the Unix way
--------------------

Compiles and installs the Arduino source files as a Unix library archive file,
together with the corresponding header files.

In addition the rules for building an Arduino application is offloaded into an
external makefile (arduino.mk). The 'Makefile' needed can thus be reduced to a
few lines. An example:

    TARGET = blink
    SRCS   = blink.pde

    include /usr/local/lib/arduino.mk

Prerequisites:

    # apt-get install gcc-avr
    # apt-get install avrdude

  (Uses the standard 'avrdude' rather that the version that comes with Arduino.)

Build and install:

    $ wget http://arduino.cc/en/Main/Software/arduino-0022.tgz
    $ tar zxf arduino-0022.tgz
    $ cp -d ./arduino-0022/hardware/arduino/cores/arduino/* ./src/

  Optional:
    $ cp ./arduino-0022/libraries/LiquidCrystal/LiquidCrystal.* ./src/
    $ cp ./arduino-0022/libraries/Matrix/Matrix.* ./src/
      ...

    $ ./build-script

  The 'build-script' script builds and installs libraries for a fixed set of
  'MCU' and 'F_CPU' combinations. Change as neccessary. (It will also install
  the header and the 'arduino.mk' files.)

  Default install directory is '/usr/local/'. Change the 'PREFIX' variable at
  the top of 'Makefile' if needed.

Usage:

  See in the '/.example/' directory for an example 'Makefile'.

  Important! Make sure that the line

      #include <WProgram.h>

  is added to the top of your '*.pde' files. This is the only change that is
  needed. (Does not causes incompatibility issues.)

  Default 'MCU', 'F_CPU' and 'PORT' variables are:

      MCU   = atmega328p
      F_CPU = 16000000

      PORT  = /dev/ttyUSB0

  If other values are needed, override as needed in your 'Makefile' or give them
  as parameter to the 'make' command.


2011-02-27  <kmyksvo(at)online.no>
